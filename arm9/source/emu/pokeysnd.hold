#ifndef _POKEY_H_
#define _POKEY_H_

/* channel/chip definitions */
#define CHAN1       0
#define CHAN2       1
#define CHAN3       2
#define CHAN4       3
#define CHIP1       0
#define CHIP2       4
#define CHIP3       8
#define CHIP4      12
#define SAMPLE    127

// POKEY WRITE LOGICALS
#define AUDF1_C     0x00
#define AUDC1_C     0x01
#define AUDF2_C     0x02
#define AUDC2_C     0x03
#define AUDF3_C     0x04
#define AUDC3_C     0x05
#define AUDF4_C     0x06
#define AUDC4_C     0x07
#define AUDCTL_C    0x08
#define STIMER_C    0x09
#define SKREST_C    0x0A
#define POTGO_C     0x0B
#define SEROUT_C    0x0D
#define IRQEN_C     0x0E
#define SKCTL_C     0x0F

// POKEY READ LOGICALS
#define POT0_C      0x00
#define POT1_C      0x01
#define POT2_C      0x02
#define POT3_C      0x03
#define POT4_C      0x04
#define POT5_C      0x05
#define POT6_C      0x06
#define POT7_C      0x07
#define ALLPOT_C    0x08
#define KBCODE_C    0x09
#define RANDOM_C    0x0A
#define SERIN_C     0x0D
#define IRQST_C     0x0E
#define SKSTAT_C    0x0F

// exact 1.79 MHz clock freq (of the Atari 800 that is) 
#define FREQ_17_EXACT   1789790

// We can now handle the exact frequency as well as any other,
// because aliasing effects are suppressed for pure tones.
#define FREQ_17_APPROX  FREQ_17_EXACT

#define MAXPOKEYS	2	// max number of emulated chips 

typedef struct {
	int num;    // total number of pokeys in the machine 
	int baseclock;
	int mixing_level[MAXPOKEYS];
	unsigned int (*pot0_r[MAXPOKEYS]) (unsigned int offset);
	unsigned int (*pot1_r[MAXPOKEYS]) (unsigned int offset);
	unsigned int (*pot2_r[MAXPOKEYS]) (unsigned int offset);
	unsigned int (*pot3_r[MAXPOKEYS]) (unsigned int offset);
	unsigned int (*pot4_r[MAXPOKEYS]) (unsigned int offset);
	unsigned int (*pot5_r[MAXPOKEYS]) (unsigned int offset);
	unsigned int (*pot6_r[MAXPOKEYS]) (unsigned int offset);
	unsigned int (*pot7_r[MAXPOKEYS]) (unsigned int offset);
	unsigned int (*allpot_r[MAXPOKEYS]) (unsigned int offset);
} TPOKEYinterface;

typedef struct {
  int counter[4];		// channel counter 
  int divisor[4];		// channel divisor (modulo value) 
  unsigned int volume[4];		// channel volume - derived 
  unsigned char output[4];		// channel output signal (1 active, 0 inactive) 
  unsigned char audible[4];		// channel plays an audible tone/effect 
  unsigned int samplerate_24_8; // sample rate in 24.8 format 
  unsigned int samplepos_fract; // sample position fractional part 
  unsigned int samplepos_whole; // sample position whole part 
  unsigned int polyadjust;		// polynome adjustment 
  unsigned int p4;              // poly4 index 
  unsigned int p5;              // poly5 index 
  unsigned int p9;              // poly9 index 
  unsigned int p17;             // poly17 index 
  unsigned int r9;				// rand9 index 
  unsigned int r17;             // rand17 index 
  unsigned int clockmult;		// clock multiplier 
  int channel;            // streams channel 
  //void *timer[3]; 		// timers for channel 1,2 and 4 events 
  //void *rtimer;           // timer for calculating the random offset 
  //int ptimer_val[8];		// pot timers 
  //int ptimer_param[8];		// pot timers param
  unsigned int (*pot_r[8]) (unsigned int offset);
  unsigned int (*allpot_r) (unsigned int offset);
  unsigned int (*serin_r) (unsigned int offset);
  void (*serout_w) (unsigned int offset, unsigned int data);
  void (*interrupt_cb)(int mask);
  unsigned char AUDF[4];          // AUDFx (D200, D202, D204, D206) 
  unsigned char AUDC[4];			// AUDCx (D201, D203, D205, D207) 
  unsigned char POTx[8];			// POTx   (R/D200-D207) 
  unsigned char AUDCTL;			// AUDCTL (W/D208) 
  unsigned char ALLPOT;			// ALLPOT (R/D208) 
  unsigned char KBCODE;			// KBCODE (R/D209) 
  unsigned char RANDOM;			// RANDOM (R/D20A) 
  unsigned char SERIN;			// SERIN  (R/D20D) 
  unsigned char SEROUT;			// SEROUT (W/D20D) 
  unsigned char IRQST;			// IRQST  (R/D20E) 
  unsigned char IRQEN;			// IRQEN  (W/D20E) 
  unsigned char SKSTAT;			// SKSTAT (R/D20F) 
  unsigned char SKCTL;			// SKCTL  (W/D20F) 

	unsigned char poly4[0x0f];
	unsigned char poly5[0x1f];
	unsigned char poly9[0x1ff];
	unsigned char poly17[0x1ffff];

	unsigned char rand9[0x1ff];
	unsigned char rand17[0x1ffff]; // 263210 Octets per pokey

int DELAYED_SERIN_IRQ;
int DELAYED_SEROUT_IRQ;
int DELAYED_XMTDONE_IRQ;
} TPOKEYregisters;

extern TPOKEYregisters pokey[MAXPOKEYS];

extern void pokey_sh_start (void);
extern void pokey_sh_stop (void);
extern void pokey_sh_update(void);

extern unsigned char pokey_register_r(int offs);
extern void pokey_register_w(int offs, int data);

#endif
